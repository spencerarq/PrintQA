# .github/workflows/ci.yml

name: PrintQA CI/CD Pipeline

on:
  push:
    branches: [ main, develop, qa ]
  pull_request:
    branches: [ develop, main ]

jobs:
  test-and-analyze:
    name: Testes e Análise de Qualidade
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: test_printqa_db
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: "mysql+mysqlconnector://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@127.0.0.1:3306/test_printqa_db"
      TESTRAIL_HOST: ${{ secrets.TESTRAIL_URL }}
      TESTRAIL_USERNAME: ${{ secrets.TESTRAIL_USER }}
      TESTRAIL_PASSWORD: ${{ secrets.TESTRAIL_KEY }}

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache de dependências Pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar Dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar Testes com Pytest
        run: |
          pytest --junitxml="junit-report.xml"

      - name: Upload Relatório de Testes
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pytest-reports
          path: junit-report.xml
          retention-days: 7